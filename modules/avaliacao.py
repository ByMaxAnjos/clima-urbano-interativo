# modules/avaliacao.py

import streamlit as st
import pandas as pd
from datetime import datetime

def renderizar_pagina():
    """Renderiza o formul√°rio de avalia√ß√£o da plataforma."""

    st.markdown("""
    <div class="module-header">
        <h1>üìù Formul√°rio de Avalia√ß√£o</h1>
        <p>Coletamos cr√≠ticas, sugest√µes e ideias de estudantes e professores para aprimorar a Plataforma Clima Urbano Interativo.</p>
    </div>
    """, unsafe_allow_html=True)

    st.markdown("---")
    st.header("1Ô∏è‚É£ Perfil do Respondente")

    papel = st.radio(
        "1. Qual seu papel principal?",
        ["Estudante do ensino b√°sico", "Estudante do ensino superior", "Professor/Educador", "Outro"]
    )

    nivel_ensino = st.radio(
        "2. Em qual n√≠vel de ensino voc√™ atua ou estuda?",
        ["Ensino fundamental anos iniciais", "Ensino fundamental anos finais", "Ensino m√©dio", "Ensino superior", "P√≥s-gradua√ß√£o"]
    )

    contato_climatologia = st.radio(
        "3. Voc√™ j√° teve contato com estudos ou projetos de climatologia ou mudan√ßas clim√°ticas antes?",
        ["Sim", "N√£o"]
    )

    st.markdown("---")
    st.header("2Ô∏è‚É£ Experi√™ncia e Expectativas")

    clareza_recursos = st.radio(
        "4. Como voc√™ avalia os recursos atuais da plataforma em termos de clareza e compreens√£o?",
        ["Muito claro", "Parcialmente claro", "Pouco claro", "Confuso"]
    )

    funcionalidades = st.multiselect(
        "5. Quais funcionalidades voc√™ considera essenciais na plataforma?",
        ["Simula√ß√µes interativas", "Gr√°ficos/mapas din√¢micos", "V√≠deos/Anima√ß√µes",
         "Gloss√°rio de termos cient√≠ficos", "Jogos ou quizzes", "Estudos de caso locais",
         "Ferramentas de compara√ß√£o de cen√°rios", "Outras"]
    )

    conceitos_prioridade = st.text_area(
        "6. Quais palavras ou conceitos voc√™ acha que deveriam estar explicados com prioridade?"
    )

    apresentacao_conceitos = st.radio(
        "7. Como voc√™ prefere que os conceitos mais complexos sejam apresentados?",
        ["Texto simples", "Infogr√°ficos", "V√≠deos", "Anima√ß√µes interativas", "Exemplos pr√°ticos"]
    )

    st.markdown("---")
    st.header("3Ô∏è‚É£ Usabilidade e Design")

    navegabilidade = st.radio(
        "8. Voc√™ acha a plataforma f√°cil de navegar?",
        ["Muito f√°cil", "Mais ou menos", "Dif√≠cil"]
    )

    avaliacao_visual = st.radio(
        "9. Como voc√™ avalia o visual/design da plataforma?",
        ["Muito atraente", "Adequado", "Precisa melhorar", "Desagrad√°vel/confuso"]
    )

    dispositivos = st.radio(
        "10. A plataforma funciona bem em diferentes dispositivos?",
        ["Sempre funciona bem", "Na maioria das vezes", "√Äs vezes com dificuldades", "Quase nunca funciona bem"]
    )

    st.markdown("---")
    st.header("4Ô∏è‚É£ Conte√∫do Pedag√≥gico")

    alinhamento = st.radio(
        "11. Os temas abordados est√£o alinhados com o que voc√™ gostaria de aprender ou ensinar?",
        ["Muito alinhados", "Parcialmente alinhados", "Pouco alinhados", "N√£o alinhados"]
    )

    participacao_ativa = st.radio(
        "12. A plataforma estimula sua participa√ß√£o ativa no aprendizado?",
        ["Sim, bastante", "Parcialmente", "Pouco", "Nada"]
    )

    aprendizado_pratico = st.text_area(
        "13. Como o aprendizado poderia se tornar mais pr√°tico ou conectado com a realidade local?"
    )

    st.markdown("---")
    st.header("5Ô∏è‚É£ Comunica√ß√£o e Linguagem")

    linguagem_adequada = st.radio(
        "14. A linguagem usada na plataforma √© adequada para seu n√≠vel de conhecimento?",
        ["Muito acess√≠vel", "Um pouco t√©cnica, mas compreens√≠vel", "T√©cnica demais/dif√≠cil"]
    )

    termos_confusos = st.text_area(
        "15. H√° termos, jarg√µes ou express√µes que voc√™ n√£o entendeu ou achou confusos?"
    )

    suporte_estilos = st.radio(
        "16. A plataforma oferece suporte para diferentes estilos de aprendizagem?",
        ["Sim, atende bem", "Em parte", "N√£o, falta diversidade"]
    )

    st.markdown("---")
    st.header("6Ô∏è‚É£ Avalia√ß√£o Geral e Sugest√µes")

    gostos_plataforma = st.text_area(
        "17. O que voc√™ mais gosta na proposta da Plataforma Clima Urbano Interativo?"
    )

    desafios = st.text_area(
        "18. O que voc√™ considera o maior desafio ou limita√ß√£o at√© agora na plataforma?"
    )

    sugestao_funcionalidade = st.text_area(
        "19. Se pudesse adicionar uma funcionalidade, recurso ou estrat√©gia, o que seria?"
    )

    recomendacao = st.text_area(
        "20. Avalie de 0 a 10: quanto voc√™ recomendaria essa plataforma para colegas ou alunos?"
    )

    outras_sugestoes = st.text_area(
        "21. Outras sugest√µes, cr√≠ticas ou coment√°rios que voc√™ deseja compartilhar?"
    )

    st.markdown("---")
    st.header("Enviar Avalia√ß√£o")

    if st.button("üì§ Enviar"):
        resposta = {
            "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "papel": papel,
            "nivel_ensino": nivel_ensino,
            "contato_climatologia": contato_climatologia,
            "clareza_recursos": clareza_recursos,
            "funcionalidades": ", ".join(funcionalidades),
            "conceitos_prioridade": conceitos_prioridade,
            "apresentacao_conceitos": apresentacao_conceitos,
            "navegabilidade": navegabilidade,
            "avaliacao_visual": avaliacao_visual,
            "dispositivos": dispositivos,
            "alinhamento": alinhamento,
            "participacao_ativa": participacao_ativa,
            "aprendizado_pratico": aprendizado_pratico,
            "linguagem_adequada": linguagem_adequada,
            "termos_confusos": termos_confusos,
            "suporte_estilos": suporte_estilos,
            "gostos_plataforma": gostos_plataforma,
            "desafios": desafios,
            "sugestao_funcionalidade": sugestao_funcionalidade,
            "recomendacao": recomendacao,
            "outras_sugestoes": outras_sugestoes
        }
        # Armazenar em sess√£o (ou enviar para backend)
        if 'avaliacoes' not in st.session_state:
            st.session_state['avaliacoes'] = []

        st.session_state['avaliacoes'].append(resposta)
        st.success("‚úÖ Avalia√ß√£o registrada! Envie suas respostas seguindo as instru√ß√µes abaixo.")

        # Op√ß√£o de baixar CSV com todas respostas
        df_avaliacoes = pd.DataFrame(st.session_state['avaliacoes'])
        st.download_button(
            label="üì• Baixar todas respostas (CSV)",
            data=df_avaliacoes.to_csv(index=False),
            file_name="avaliacoes_plataforma.csv",
            mime="text/csv"
        )
        st.markdown("""
        ---
        ### üìß Enviar respostas por e-mail
        Para nos enviar sua avalia√ß√£o:

        1. Clique no bot√£o acima para baixar suas respostas em **CSV**.
        2. Envie o arquivo por e-mail para: **marianaandreotti@gmail.com** (Mariana Dias).
        3. No corpo do e-mail, sinta-se √† vontade para adicionar coment√°rios adicionais.
        
        üí° Sugest√£o de assunto do e-mail: "Meu Nome:Avalia√ß√£o Plataforma Clima Urbano Interativo"
        """)


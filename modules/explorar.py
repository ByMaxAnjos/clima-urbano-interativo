# modules/explorar.py

import streamlit as st
import folium
from streamlit_folium import st_folium
from branca.colormap import linear
import pandas as pd

def renderizar_pagina(gdf_zcl, gdf_temp):
    """Renderiza a p√°gina do m√≥dulo Explorar."""
    
    st.markdown("""
    <div class="module-header">
        <h1>üåç M√≥dulo Explorar</h1>
        <p>Visualize e explore mapas interativos de Zonas Clim√°ticas Locais e temperatura da superf√≠cie</p>
    </div>
    """, unsafe_allow_html=True)

    # Painel de controle na barra lateral
    with st.sidebar:
        st.markdown("### üéõÔ∏è Controles de Visualiza√ß√£o")
        
        # Sele√ß√£o de cidade
        cidade_selecionada = st.selectbox(
            "üìç Selecione uma cidade:",
            ["S√£o Paulo (Exemplo)"],
            help="Mais cidades ser√£o adicionadas em vers√µes futuras"
        )
        
        st.markdown("### üóÇÔ∏è Camadas de Dados")
        
        # Controles de camadas com descri√ß√µes
        mostrar_zcl = st.checkbox(
            "üèòÔ∏è Zonas Clim√°ticas Locais (ZCL)", 
            value=True,
            help="Mostra a classifica√ß√£o do uso do solo urbano segundo Stewart & Oke (2012)"
        )
        
        mostrar_temp = st.checkbox(
            "üå°Ô∏è Temperatura da Superf√≠cie", 
            value=False,
            help="Dados de temperatura obtidos por sensoriamento remoto"
        )
        
        # Informa√ß√µes sobre os dados
        if mostrar_zcl or mostrar_temp:
            st.markdown("### ‚ÑπÔ∏è Informa√ß√µes dos Dados")
            
            if mostrar_zcl:
                st.info("""
                **ZCL Ativas:**
                - LCZ 2: Compact midrise
                - LCZ 5: Open midrise  
                - LCZ 8: Large low-rise
                - LCZ A: Dense trees
                - LCZ D: Low plants
                """)
            
            if mostrar_temp:
                if gdf_temp is not None and not gdf_temp.empty:
                    temp_min = gdf_temp['temperatura_c'].min()
                    temp_max = gdf_temp['temperatura_c'].max()
                    st.info(f"""
                    **Temperatura:**
                    - M√≠nima: {temp_min:.1f}¬∞C
                    - M√°xima: {temp_max:.1f}¬∞C
                    - Fonte: Landsat 8 TIRS
                    """)

    # √Årea principal do mapa
    col1, col2 = st.columns([4, 1])
    
    with col1:
        # Configura√ß√£o do mapa base
        map_center = [-23.5505, -46.6333]  # Centro de S√£o Paulo
        m = folium.Map(
            location=map_center, 
            zoom_start=9, 
            tiles="CartoDB positron",  # Um tile inicial obrigat√≥rio
            prefer_canvas=True
        )
        # Adicionar camada de ZCL se selecionada
        if mostrar_zcl and gdf_zcl is not None and not gdf_zcl.empty:
            # Mapeamento de cores para as classes de ZCL
            zcl_color_map = {
            'LCZ 1':  '#910613',  # Compact high-rise
            'LCZ 2':  '#D9081C',  # Compact midrise
            'LCZ 3':  '#FF0A22',  # Compact low-rise
            'LCZ 4':  '#C54F1E',  # Open high-rise
            'LCZ 5':  '#FF6628',  # Open midrise
            'LCZ 6':  '#FF985E',  # Open low-rise
            'LCZ 7':  '#FDED3F',  # Lightweight low-rise
            'LCZ 8':  '#BBBBBB',  # Large low-rise
            'LCZ 9':  '#FFCBAB',  # Sparsely built
            'LCZ 10': '#565656',  # Heavy industry
            'LCZ A':  '#006A18',  # Dense trees
            'LCZ B':  '#00A926',  # Scattered trees
            'LCZ C':  '#628432',  # Bush / scrub
            'LCZ D':  '#B5DA7F',  # Low plants
            'LCZ E':  '#000000',  # Bare rock / paved
            'LCZ F':  '#FCF7B1',  # Bare soil / sand
            'LCZ G':  '#656BFA'   # Water
        }
            
            # Adiciona cada pol√≠gono de ZCL ao mapa
            for _, row in gdf_zcl.iterrows():
                zcl_classe = row.get('zcl_classe', 'Desconhecida')
                cor = zcl_color_map.get(zcl_classe, '#gray')
                
                folium.GeoJson(
                    row.geometry,
                    style_function=lambda feature, color=cor: {
                        'fillColor': color,
                        'color': 'black',
                        'weight': 1,
                        'fillOpacity': 0.7,
                        'opacity': 0.8
                    },
                    popup=folium.Popup(
                        f"""
                        <div style='width: 200px'>
                        <h4>{zcl_classe}</h4>
                        <p><b>Caracter√≠sticas:</b></p>
                        <p>{row.get('descricao', 'Sem descri√ß√£o dispon√≠vel')}</p>
                        <p><b>Efeito T√©rmico:</b> {row.get('efeito_temp', 'N√£o dispon√≠vel')}</p>
                        <p><b>Ilha de Calor:</b> {row.get('ilha_calor', 'N√£o dispon√≠vel')}</p>
                        <p><b>Interven√ß√£o Recomendada:</b> {row.get('intervencao', 'N√£o dispon√≠vel')}</p>
                        </div>
                        """,
                        max_width=250
                    )
                ).add_to(m)

        # Adicionar camada de temperatura se selecionada
        if mostrar_temp and gdf_temp is not None and not gdf_temp.empty:
            # Criar mapa de cores para temperatura
            temp_min = gdf_temp['temperatura_c'].min()
            temp_max = gdf_temp['temperatura_c'].max()
            
            colormap = linear.YlOrRd_09.scale(temp_min, temp_max)
            colormap.caption = 'Temperatura da Superf√≠cie (¬∞C)'
            m.add_child(colormap)

            # Adiciona cada c√©lula de temperatura ao mapa
            for _, row in gdf_temp.iterrows():
                temp_valor = row['temperatura_c']
                
                folium.GeoJson(
                    row.geometry,
                    style_function=lambda feature, temp=temp_valor: {
                        'fillColor': colormap(temp),
                        'color': 'none',
                        'weight': 0,
                        'fillOpacity': 0.6,
                    },
                    tooltip=folium.Tooltip(
                        f"<b>Temperatura:</b> {temp_valor:.1f}¬∞C",
                        sticky=True
                    )
                ).add_to(m)

        # Adicionar controle de camadas
        folium.LayerControl().add_to(m)
        
        # Renderizar o mapa
        map_data = st_folium(
            m, 
            width=None, 
            height=600, 
            returned_objects=["last_object_clicked"],
            key="explorar_map"
        )
        
    with col2:
        st.markdown("### üéØ Instru√ß√µes")
        st.markdown("""
        **Como usar:**
        1. Selecione as camadas desejadas na barra lateral
        2. Clique nos elementos do mapa para ver detalhes
        3. Use os controles de zoom para explorar
        4. Ative/desative camadas conforme necess√°rio
        """)
        
        # Mostrar informa√ß√µes do √∫ltimo clique
        if map_data and map_data.get("last_object_clicked"):
            st.markdown("### üìç √öltimo Clique")
            clicked_data = map_data["last_object_clicked"]
            if clicked_data:
                st.json(clicked_data)
        
        # Estat√≠sticas r√°pidas
        st.markdown("### üìä Estat√≠sticas R√°pidas")
        
        if gdf_zcl is not None and not gdf_zcl.empty:
            num_zcl = len(gdf_zcl['zcl_classe'].unique())
            st.metric("Classes de ZCL", num_zcl)
            
        if gdf_temp is not None and not gdf_temp.empty:
            temp_media = gdf_temp['temperatura_c'].mean()
            st.metric("Temp. M√©dia", f"{temp_media:.1f}¬∞C")

    # Se√ß√£o de legenda expandida
    
    
   # Dicion√°rio de cores das LCZ
    lcz_color_map = {
        'LCZ 1': '#910613', 'LCZ 2': '#D9081C', 'LCZ 3': '#FF0A22',
        'LCZ 4': '#C54F1E', 'LCZ 5': '#FF6628', 'LCZ 6': '#FF985E',
        'LCZ 7': '#FDED3F', 'LCZ 8': '#BBBBBB', 'LCZ 9': '#FFCBAB',
        'LCZ 10': '#565656', 'LCZ A': '#006A18', 'LCZ B': '#00A926',
        'LCZ C': '#628432', 'LCZ D': '#B5DA7F', 'LCZ E': '#000000',
        'LCZ F': '#FCF7B1', 'LCZ G': '#656BFA'
    }

    with st.expander("üìñ Legenda Detalhada das Zonas Clim√°ticas Locais"):
        st.markdown("""
        ### Zonas Constru√≠das (Built Types)
        """)

        built_lcz = [
            ('LCZ 1', 'Compact high-rise', 'Maior reten√ß√£o de calor urbano, forte aquecimento noturno', 'Muito forte', 'Criar ventila√ß√£o urbana, √°reas verdes verticais, telhados frios'),
            ('LCZ 2', 'Compact midrise', 'Aquecimento elevado, mas menos intenso que arranha-c√©us', 'Forte', 'Manter corredores de ventila√ß√£o e arboriza√ß√£o'),
            ('LCZ 3', 'Compact low-rise', 'Aquecimento leve', 'Baixa', 'Expandir vegeta√ß√£o urbana e reduzir impermeabiliza√ß√£o'),
            ('LCZ 4', 'Open high-rise', 'Menor que LCZ 1, ventila√ß√£o importante', 'Moderada', 'Manter √°reas verdes e reduzir impermeabiliza√ß√£o'),
            ('LCZ 5', 'Open midrise', 'Aquecimento leve a moderado', 'Baixa', 'Evitar adensamento excessivo, introduzir arboriza√ß√£o'),
            ('LCZ 6', 'Open low-rise', 'Aquecimento leve, efeito t√©rmico relativamente baixo', 'Baixa', 'Expandir vegeta√ß√£o e √°reas perme√°veis'),
            ('LCZ 7', 'Lightweight low-rise', 'Suaviza temperaturas durante o dia', 'Baixa', 'Expandir √°reas verdes e gramados'),
            ('LCZ 8', 'Large low-rise', 'Superf√≠cies extensas acumulam calor e irradiam √† noite', 'Pode gerar ilhas de calor locais', 'Aplicar coberturas frias, reduzir pavimenta√ß√£o imperme√°vel'),
            ('LCZ 9', 'Sparsely built', 'Aquecimento baixo a moderado', 'Baixa', 'Introduzir vegeta√ß√£o, manter permeabilidade'),
            ('LCZ 10', 'Heavy industry', 'Superf√≠cies industriais acumulam calor', 'Alta localmente', 'Aplicar coberturas frias, reduzir pavimentos quentes')
        ]

        for lcz, desc, efeito, ilha, interv in built_lcz:
            cor = lcz_color_map.get(lcz, '#808080')
            st.markdown(f"""
            <span style="background-color:{cor};color:white;padding:3px 8px;border-radius:4px">{lcz}</span>  
            **{desc}**  
            *Efeito t√©rmico:* {efeito}  
            *Contribui√ß√£o √† ilha de calor:* {ilha}  
            *Interven√ß√£o recomendada:* {interv}  
            """, unsafe_allow_html=True)

        st.markdown("### Cobertura Natural (Land Cover Types)")

        natural_lcz = [
            ('LCZ A', 'Dense trees', 'Resfriamento significativo por sombra e evapotranspira√ß√£o', 'Mitiga√ß√£o significativa', 'Preservar e ampliar parques urbanos'),
            ('LCZ B', 'Scattered trees', 'Redu√ß√£o moderada da temperatura', 'Mitiga√ß√£o moderada', 'Aumentar densidade arb√≥rea e conectar corredores verdes'),
            ('LCZ C', 'Bush, scrub', 'Suaviza temperaturas, menor efeito que √°rvores densas', 'Mitiga√ß√£o leve', 'Expandir cobertura arbustiva e corredores verdes'),
            ('LCZ D', 'Low plants', 'Suaviza temperaturas durante o dia, pouco efeito noturno', 'Mitiga√ß√£o leve a moderada', 'Expandir √°reas perme√°veis e gramados'),
            ('LCZ E', 'Bare rock or paved', 'Ret√©m calor, aumenta temperatura local', 'Aumenta efeito de aquecimento', 'Reduzir pavimenta√ß√£o, aplicar coberturas reflexivas'),
            ('LCZ F', 'Bare soil or sand', 'Leve aquecimento, menor que pavimentado', 'Baixa', 'Plantar vegeta√ß√£o baixa ou gramados'),
            ('LCZ G', 'Water', 'Resfriamento local', 'Mitiga, pode resfriar microclimas', 'Proteger e integrar corpos d\'√°gua no tecido urbano')
        ]

        for lcz, desc, efeito, ilha, interv in natural_lcz:
            cor = lcz_color_map.get(lcz, '#808080')
            st.markdown(f"""
            <span style="background-color:{cor};color:white;padding:3px 8px;border-radius:4px">{lcz}</span>  
            **{desc}**  
            *Efeito t√©rmico:* {efeito}  
            *Contribui√ß√£o √† ilha de calor:* {ilha}  
            *Interven√ß√£o recomendada:* {interv}  
            """, unsafe_allow_html=True)

    # Dicas de uso
    st.markdown("""
    ---
    ### üí° Dicas de Uso

    - **Combine camadas:** Ative simultaneamente as camadas de ZCL e de temperatura da superf√≠cie para visualizar como diferentes tipos de uso do solo influenciam o microclima urbano.  
    - **Explore diferentes escalas:** Utilize o zoom para examinar desde grandes regi√µes da cidade at√© quarteir√µes espec√≠ficos, identificando padr√µes locais de aquecimento e resfriamento.  
    - **Compare √°reas:** Observe diferen√ßas de temperatura entre zonas verdes (por exemplo, LCZ A ‚Äì Dense Trees) e √°reas densamente constru√≠das (como LCZ 2, 5 ou 8) para entender o impacto das caracter√≠sticas urbanas.  
    - **Planeje interven√ß√µes:** Use o mapa para identificar √°reas que podem se beneficiar de estrat√©gias de mitiga√ß√£o da ilha de calor, como arboriza√ß√£o, telhados frios ou aumento de √°reas perme√°veis.  
    - **Pr√≥ximo passo:** Acesse o m√≥dulo "Investigar" para trabalhar com seus pr√≥prios dados de campo e aprofundar a an√°lise.
    """)

